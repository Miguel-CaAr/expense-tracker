"""
Django settings for expensetracker project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path #? Modulo que ofrece clases que representan rutas con semántica apropiada para diferentes sistemas operativos.
import os #? Importacion del modulo 'os' para interactuar con el sistema operativo

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+nn24k^he-)t=5ftr8&y4a!t+@kl2xo=n52c@kj^181dv@&@b%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
#? Aqui se registran las aplicaciones del proyecto, ya incluye algunas precargadas por Django.
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #Apps
    "expense",
    "categories",
    "debts",
    "loans",
    "incomes",
]

#? Dependencias middleware son mediadores entre el backend y el frontend
#? "El middleware es una capa de procesamiento en el lado del servidor que actúa sobre las solicitudes y respuestas HTTP antes y después de ser manejadas por la aplicación web"
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

#? Es una configuración en Django que define el módulo de URL principal para tu proyecto
ROOT_URLCONF = 'expensetracker.urls'

#? Define como se renderizan las plantillas en la aplicacion web
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

#? Es una especificación de Python que describe cómo un servidor web puede comunicarse con una aplicación web escrita en Python.
WSGI_APPLICATION = 'expensetracker.wsgi.application'   


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

#? Configuraciones para la base de datos
#---------BASE DE DATOS MYSQLITE----------#
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

#---------BASE DE DATOS POSTGRESQL----------#
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'postgres', # Nombre de la base de datos
#         'USER': 'postgres', # Usuario de PostgreSQL
#         'PASSWORD': '28042703', # Contraseña de PostgreSQL
#         'HOST': 'localhost', # Host de la base de datos
#         'PORT': '5432', # Puerto de PostgreSQL
#     }
# }

# Password validation

#? Es una configuración en Django que te permite definir una lista de validadores que se aplicarán a las contraseñas de los usuarios para garantizar que cumplan con ciertos criterios de seguridad. 
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

#? Configuracion para el lenguaje, zona horaria 
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Los_Angeles'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

#? Configuracion de la URL base para los archivos estáticos servidos por la aplicación 
STATIC_URL = 'static/'

#? Configuracion para que Django busque archivos adicionales
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'expense/static'),
]

#? Ruta para los archivos estaticos al recolectarlos con el comando 'collectstatic'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field
# Default primary key field type

#? Es una configuración en Django que te permite especificar el tipo de campo automático que se utilizará para la clave primaria de los modelos si no se especifica explícitamente ningún campo primario en el modelo.
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
